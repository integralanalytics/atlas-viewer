version: 3

# extends: https://api.github.com/repos/example/pullapprove-config/contents/.pullapprove.yml

pullapprove_conditions:
# - "'WIP' not in title"
# - "base.ref == 'master'"
- "'hotfix' not in labels"
# this uses status api, not checks api. Emailed with develoepr. Need to wait on this.
# - "'*run-tests (ecmSetV1)*' in statuses.succeeded"
# - "'*run-tests (ecmSetV2)*' in statuses.succeeded"
# - "'*run-tests (http)*' in statuses.succeeded"

notifications:
- when: pull_request.opened
  # only need to send this to external-contributors
  if: "author_association in ['FIRST_TIMER', 'FIRST_TIME_CONTRIBUTOR', 'CONTRIBUTOR']"
  comment: >
    Hey @{{ author }}, please make sure your tests pass and you have looked everything over. Then we will review.
    Thanks for the PR!
- when: pullapprove.approved
  comment: "The review is completed. @{{ author }}, please merge this in when ready."

groups:
  generic_code:
    reviewers:
      teams:
      - "developers"
- "developers_managed"

    reviews:
      required: 1  # number of approvals required from this group
      request: 1  # number of review requests sent at a time
      request_order: random  # "random" or "given"
      author_value: 0
    labels:
      approved: "Code review approved"
  # quality:
  #   reviewers:
  #     teams:
  #     - qa
  #   reviews:
  #     required: 1  # number of approvals required from this group
  #     request: 1  # number of review requests sent at a time
  #     request_order: random  # "random" or "given"
  #     author_value: 0
  #   labels:
  #     approved: "Approved by QA"
  # database:
  #   conditions:
  #   - "'*migrations*' in files"  # only review if "migrations" files have been touched
  #   reviewers:
  #     teams:
  #     - database

  # signoff:
  #   conditions:
  #   # only asked to review once the other 2 groups are finished (or not applicable)
  #   - "'code' in groups.passing"
  #   - "'database' in groups.passing"
  #   reviewers:
  #     teams:
  #     - admins
